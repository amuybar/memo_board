<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Home</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/semantic-ui/2.4.1/semantic.min.css"
        integrity="sha512-8bHTC73gkZ7rZ7vpqUQThUDhqcNFyYi2xgDgPDHc+GXVGHXq+xPjynxIopALmOPqzo9JZj0k6OqqewdGO3EsrQ=="
        crossorigin="anonymous" referrerpolicy="no-referrer" />
    <style>
        body {
            background-color: #1b1c1d;
            margin: 0;
            padding: 0;
            position: relative;
            width: 100%;
        }

        header {
            display: flex;
            justify-content: space-between;
            width: 100%;
            align-items: center;
            background-color: #1b1c1d;
            padding: 1rem;
            color: white;
            position: relative;
            z-index: 1;
        }
        #memo{
            margin:  20% auto;
            display: block;
        }

        .footer {
            position: fixed;
            bottom: 0;
            width: 100%;
            background-color: transparent;
            color: rgb(248, 127, 127);
            justify-content: center;
            align-items: center;
            font-size: 20px;
            padding: 10px;
            z-index: 1;
        }

        .memo-card {
            background-color: #2b2a2a;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.7);
            padding: 1rem;
            border-radius: 12px;
            margin: 1rem;
            color: white;
            font-size: 20px;
            height: 300px;
            width: 70%;
            margin: 30px auto;
            transform: rotateZ(3deg);
        }

        .memo-card:hover {
            transform: rotateX(8deg);
            box-shadow: 0 8px 16px rgba(0, 0, 0, 0.3);
            cursor: pointer;
        }

       
        .button-container {
               display: flex;
                justify-content: space-between;
                margin-top: 10px; /* Adjust spacing as needed */
        }


        @media (min-width: 768px) {
            #mainContent {
                display: flex;
                flex-wrap: wrap;
                justify-content: space-between;
            }

            .memo-card {
                flex: 0 0 30%;
            }
        }

        @media (max-width: 767px) {
            .memo-card {
                flex: 1 1 100%;
            }
        }

        #particles-js {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            z-index: -1;
        }
    </style>
</head>

<body class="container">
    <div id="particles-js"></div>

    <header class="ui inverted menu">
        <div class="left menu">
            <h1 class="item">Memo Board</h1>
        </div>
        <div class="right menu">
            <% if (user) { %>
                <div class="ui dropdown item">
                    <i class="dropdown icon"></i>
                    <span class="text">Hello, <%= user.username %>!</span>
                    <div class="menu">
                        <a class="item" href="/logout">Logout</a>
                        </div>
                </div>
            <% } else { %>
                <a class="item" href="/login" id="loginBtn">Login</a>
                <a class="item" href="/signup" id="registerBtn">Signup</a>
            <% } %>
        </div>
    </header>

    <main id="mainContent">
        <button class="ui primary button" id="memo">View Memo</button>
    </main>

    <div class="ui  footer">
        <div class="ui container">
            Memoboard 2024. All Rights Reserved
        </div>
    </div>

    <script>
        document.getElementById("loginBtn").addEventListener("click", function (event) {
            event.preventDefault();
            fetch("/login")
                .then(response => response.text())
                .then(html => {
                    document.getElementById("mainContent").innerHTML = html;
                })
                .catch(error => console.error("Error loading login form:", error));
        });

        document.getElementById("registerBtn").addEventListener("click", function (event) {
            event.preventDefault();
            fetch("/signup")
                .then(response => response.text())
                .then(html => {
                    document.getElementById("mainContent").innerHTML = html;
                })
                .catch(error => console.error("Error loading login form:", error));
        });

document.getElementById("memo").addEventListener("click", function(event) {
  event.preventDefault();

  fetch("/memos")
      .then(response => response.json()) // Ensure response is parsed as JSON
      .then(memoData => {
          const mainContent = document.getElementById("mainContent");
          mainContent.innerHTML = ""; // Clear existing content

          // Create and populate cards dynamically
          memoData.forEach(memo => {
              const card = document.createElement("div");
              card.classList.add("memo-card"); // Add a CSS class for styling

              // Example card structure based on your data (customize as needed)
              const cardTitle = document.createElement("h3");
              cardTitle.textContent = memo.title || "Untitled Memo"; // Handle missing title

              const cardAuthor = document.createElement("span");
              cardAuthor.textContent = `From: ${memo.from || "Unknown"}`;

              const cardContent = document.createElement("p");
              cardContent.textContent = memo.content || ""; // Handle missing content

              const cardRecepient = document.createElement("span");
              cardRecepient.textContent = `To: ${memo.to || "Unknown"}`;

              // Create container for edit and delete buttons
              const buttonContainer = document.createElement("div");
              buttonContainer.classList.add("button-container"); // Add styling class

              // Create edit button
              const editButton = document.createElement("button");
              editButton.classList.add("ui", "icon", "green", "button"); // Add Semantic UI classes
              const editIcon = document.createElement("i");
              editIcon.classList.add("edit", "icon"); // Add icon class
              editButton.appendChild(editIcon); // Add edit icon to button

              // Create delete button
              const deleteButton = document.createElement("button");
              deleteButton.classList.add("ui", "icon", "red", "button"); // Add Semantic UI classes
              const deleteIcon = document.createElement("i");
              deleteIcon.classList.add("trash", "icon"); // Add icon class
              deleteButton.appendChild(deleteIcon); // Add delete icon to button

              // Add event listeners for edit and delete buttons (implement functionality based on your needs)
              editButton.addEventListener("click", function() {
                  // Handle edit click event (e.g., open edit form)
              });

              deleteButton.addEventListener("click", function() {
                  // Handle delete click event (e.g., confirm and delete memo)
              });

              // Append buttons to container and card
              buttonContainer.appendChild(editButton);
              buttonContainer.appendChild(deleteButton);
              card.appendChild(cardTitle);
              card.appendChild(cardAuthor);
              card.appendChild(cardContent);
              card.appendChild(cardRecepient);
              card.appendChild(buttonContainer);

              mainContent.appendChild(card);
          });
      })
      .catch(error => console.error("Error loading memos:", error));
});


        document.getElementById("main").addEventListener("click", function (event) {
            event.preventDefault();
            fetch("/")
                .then(response => response.text())
                .then(html => {
                    document.getElementById("container").innerHTML = html;
                })
                .catch(error => console.error("Error loading login form:", error));
        });
    </script>
   
    <script src="https://cdn.jsdelivr.net/particles.js/2.0.0/particles.min.js"></script>

    <script>
        particlesJS("particles-js", {
            "particles": {
                "number": {
                    "value": 80,
                    "density": {
                        "enable": true,
                        "value_area": 800
                    }
                },
                "color": {
                    "value": "#ffffff"
                },
                "shape": {
                    "type": "circle",
                    "stroke": {
                        "width": 0,
                        "color": "#000000"
                    },
                    "polygon": {
                        "nb_sides": 5
                    },
                    "image": {
                        "src": "img/github.svg",
                        "width": 100,
                        "height": 100
                    }
                },
                "opacity": {
                    "value": 0.9,
                    "random": false,
                    "anim": {
                        "enable": false,
                        "speed": 1,
                        "opacity_min": 0.1,
                        "sync": false
                    }
                },
                "size": {
                    "value": 3,
                    "random": true,
                    "anim": {
                        "enable": false,
                        "speed": 40,
                        "size_min": 0.1,
                        "sync": false
                    }
                },
                "line_linked": {
                    "enable": true,
                    "distance": 150,
                    "color": "#ffffff",
                    "opacity": 0.4,
                    "width": 1
                },
                "move": {
                    "enable": true,
                    "speed": 6,
                    "direction": "none",
                    "random": false,
                    "straight": false,
                    "out_mode": "out",
                    "bounce": false,
                    "attract": {
                        "enable": false,
                        "rotateX": 600,
                        "rotateY": 1200
                    }
                }
            },
            "interactivity": {
                "detect_on": "canvas",
                "events": {
                    "onhover": {
                        "enable": true,
                        "mode": "repulse"
                    },
                    "onclick": {
                        "enable": true,
                        "mode": "push"
                    },
                    "resize": true
                },
                "modes": {
                    "grab": {
                        "distance": 400,
                        "line_linked": {
                            "opacity": 1
                        }
                    },
                    "bubble": {
                        "distance": 400,
                        "size": 40,
                        "duration": 2,
                        "opacity": 8,
                        "speed": 3
                    },
                    "repulse": {
                        "distance": 200,
                        "duration": 0.4
                    },
                    "push": {
                        "particles_nb": 4
                    },
                    "remove": {
                        "particles_nb": 2
                    }
                }
            },
            "retina_detect": true
        });
    </script>
</body>

</html>
